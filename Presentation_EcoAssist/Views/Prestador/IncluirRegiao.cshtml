@using Presentation.Extensions
@model ERP_CRM_Solution.ViewModels.PrestadorRegiaoViewModel
@{
    Layout = "~/Views/Shared/_Layout_Admin.cshtml";
}
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="page-title"> 
        <h3 class="title">Prestadores</h3> 
        <br />
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("CarregarBase", "BaseAdmin")">Dashboard</a>
            </li>
            <li>
                <a href="@Url.Action("MontarTelaPrestador", "Prestador")">Prestadores</a>
            </li>
            <li>
                <a href="@Url.Action("EditarPrestador", "Prestador")">Prestador - Edição</a>
            </li>
            <li class="active">
                <strong>Regiões - Inclusão</strong>
            </li>
        </ol>
        <br />
    </div>
    <div class="row">
        <div class="col-lg-12 col-md-12 col-xs-12">
            <div class="col-lg-12 col-md-12 col-xs-12 ibox float-e-margins">
                <div class="ibox-title">
                    <h5>Regiões - Inclusão</h5>
                </div>
                @using (Html.BeginForm("IncluirRegiao", "Prestador", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", @id="pwd-container1" }))
                {
                    <div class="ibox-content">
                        @Html.AntiForgeryToken()
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger">
                                <button type="button" class="close" data-dismiss="alert">Fechar</button>
                                @Html.ValidationSummary(false, "Erros de Crítica Encontrados:", new { @class = "text-danger" })
                            </div>
                        }
                        <div class="row">
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    @Html.HiddenFor(m => m.PRES_CD_ID)
                                    @Html.HiddenFor(m => m.PRRE_IN_ATIVO)
                                    Região*
                                    @Html.DropDownListFor(m => m.REGI_CD_ID, (SelectList)ViewBag.Regiao, "Selecionar", new { @class = "form-control", autofocus = true, onchange = "FiltrarCobertura($(this).val())", id = "regiao" })
                                    @Html.ValidationMessageFor(m => m.REGI_CD_ID, "", new { @style = "color:red" })
                                </div>
                                <div class="col-lg-3 col-md-3 col-xs-12">
                                    Cobertura*
                                    @Html.DropDownListFor(m => m.RECO_CD_ID, (SelectList)ViewBag.Cobertura, "Selecionar", new { @class = "form-control", autofocus = true, onchange = "FiltrarRegiao($(this).val())", id = "cobertura" })
                                    @Html.ValidationMessageFor(m => m.RECO_CD_ID, "", new { @style = "color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Preço Base (R$)*
                                    @Html.TextBoxFor(m => m.PRRE_VL_PRECO_BASE, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.PRRE_VL_PRECO_BASE, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Preço Máximo (R$)
                                    @Html.TextBoxFor(m => m.PRRE_VL_PRECO_MAXIMO, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.PRRE_VL_PRECO_MAXIMO, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Preço Mínimo (R$)
                                    @Html.TextBoxFor(m => m.PRRE_VL_PRECO_MINIMO, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.PRRE_VL_PRECO_MINIMO, "",new { @style="color:red" })
                                </div>
                            </div>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Acrésc.Hora (R$)
                                    @Html.TextBoxFor(m => m.PRRE_ACRESCIMO_HORA, new { @class = "form-control", autofocus = true })
                                    @Html.ValidationMessageFor(m => m.PRRE_ACRESCIMO_HORA, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Carência (Dias)
                                    @Html.TextBoxFor(m => m.PRR_NR_DIAS_CARENCIA, new { @class = "form-control", autofocus = true, @id="cel" })
                                    @Html.ValidationMessageFor(m => m.PRR_NR_DIAS_CARENCIA, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    SLA (Dias)
                                    @Html.TextBoxFor(m => m.PRRE_IN_SLA, new { @class = "form-control", autofocus = true, @id="wpp" })
                                    @Html.ValidationMessageFor(m => m.PRRE_IN_SLA, "",new { @style="color:red" })
                                </div>
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Prioridade
                                    @Html.DropDownListFor(m => m.PRRE_IN_PRIORIDADE, (SelectList)ViewBag.Prioridade, "Selecionar", new { @class = "form-control", autofocus = true, id = "categoria" })
                                    @Html.ValidationMessageFor(m => m.PRRE_IN_PRIORIDADE, "",new { @style="color:red" })
                                </div>
                            </div>
                            <h5 style="color:green; font-weight:bold">Funcionamento ----------------------------------------------------------</h5>
                            <div class="form-group" style=" margin-left: -15px; margin-right: -15px;">                
                                <div class="col-lg-1 col-md-1 col-xs-12">
                                    2a
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                                <div class="col-lg-1 col-md-1 col-xs-12">
                                    3a
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                                <div class="col-lg-1 col-md-1 col-xs-12">
                                    4a
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                                <div class="col-lg-1 col-md-1 col-xs-12">
                                    5a
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                                <div class="col-lg-1 col-md-1 col-xs-12">
                                    6a
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Sábado
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                                <div class="col-lg-2 col-md-2 col-xs-12">
                                    Domingo
                                    <br />
                                    @Html.CheckBoxFor(m => m.Segunda, new { @class = "checkbox i-checks", autofocus = true })
                                </div>                                         
                            </div>
                        </div>
                        <div class="form-group">
                            @Html.ButtonActionSubmit(text: "Confirma Inclusão de Região", htmlAttributes: new { id = "basictoast" })
                            @Html.ButtonLinkIndex(text: "Cancelar", action: "VoltarAnexoPrestador", controller: "Prestador")
                        </div>
                    </div>
                }
            </div>
         </div>
    </div>
</div>

@section Styles {
    <link href="~/Content/themes/base/all.css" rel="stylesheet" />
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
    @Styles.Render("~/plugins/jasnyBootstrapStyles")
    @Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
    @Styles.Render("~/plugins/touchSpinStyles")
    @Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
    @Scripts.Render("~/plugins/toastr")
    @Scripts.Render("~/plugins/dataTables")
    @Scripts.Render("~/bundles/inputmask")
    @Scripts.Render("~/plugins/jasnyBootstrap")
    @Scripts.Render("~/plugins/sparkline")
    @Scripts.Render("~/plugins/switchery")
    @Scripts.Render("~/plugins/touchSpin")
    @Scripts.Render("~/plugins/iCheck")
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery.maskedinput/1.4.1/jquery.maskedinput.js"></script>
    <script src="~/Scripts/uploadAnexo.js"></script>

    <script type="text/javascript">
        $(function () {
            $("#cpf").mask("999.999.999-99");
            $("#cnpj").mask("99.999.999/9999-99");
            $("#cep").mask("99999-999");
            $("#tel").mask("(99)99999-9999");
            $("#wpp").mask("(99)99999-9999");
        });
    </script>
    @Scripts.Render("~/plugins/iCheck")

    <script type="text/javascript">
        $(document).ready(function () {

            $('.i-checks').iCheck({
                checkboxClass: 'icheckbox_square-green',
                radioClass: 'iradio_square-green',
            });

        });
    </script>
    <script>
        function FiltrarCobertura(REGI_CD_ID) {
            var data = {
                id: REGI_CD_ID
            }

            var objCobertura = $('select#cobertura');

            // Requisição para o controller
            $.ajax({
                url: '../Prestador/FiltrarCobertura'
                , type: 'POST'
                , data: data
                , success: function (r) {
                    // Remove todos os itens da lista e adiciona o placeholder
                    objCobertura.children('option').remove();
                    objCobertura.append('<option>Selecionar</option>');

                    // Loop para adicionar Itens específicos à categoria
                    r.forEach(function (e) {
                        objCobertura.append('<option value="' + e.RECO_CD_ID + '">' + e.RECO_NM_NOME + '</option>');
                    });

                    //console.log(r);
                }
            });
        }

        function FiltrarRegiao(RECO_CD_ID) {
            var data = {
                id: RECO_CD_ID
            }

            var objRegiao = $('select#regiao');

            // Requisição para o controller
            $.ajax({
                url: '../Prestador/FiltrarRegiao'
                , type: 'POST'
                , data: data
                , success: function (r) {
                    // Remove todos os itens da lista e adiciona o placeholder
                    objRegiao.children('option').remove();
                    objRegiao.append('<option>Selecionar</option>');

                    // Loop para adicionar Itens específicos à categoria
                    r.forEach(function (e) {
                        if (r.length > 1) {
                            objRegiao.append('<option value="' + e.REGI_CD_ID + '">' + e.REGI_NM_NOME + '</option>');
                        } else {
                            objRegiao.append('<option selected="selected" value="' + e.REGI_CD_ID + '">' + e.REGI_NM_NOME + '</option>');
                        }

                    });
                }
            });
        }
    </script>

    <script type="text/javascript">
        $(document).ready(function () {

            var i = -1;
            var toastCount = 0;
            var $toastlast;
            var getMessage = function () {
                var msg = 'Hi, welcome to Inspinia. This is example of Toastr notification box.';
                return msg;
            };

            $('#basictoast').click(function () {
                // Display a success toast, with a title
                toastr.success('Inclusão em andamento!')
            });
            $('#showtoast').click(function () {
                var shortCutFunction = $("#toastTypeGroup input:radio:checked").val();
                var msg = $('#message').val();
                var title = $('#title').val() || '';
                var $showDuration = $('#showDuration');
                var $hideDuration = $('#hideDuration');
                var $timeOut = $('#timeOut');
                var $extendedTimeOut = $('#extendedTimeOut');
                var $showEasing = $('#showEasing');
                var $hideEasing = $('#hideEasing');
                var $showMethod = $('#showMethod');
                var $hideMethod = $('#hideMethod');
                var toastIndex = toastCount++;
                toastr.options = {
                    closeButton: $('#closeButton').prop('checked'),
                    debug: $('#debugInfo').prop('checked'),
                    progressBar: $('#progressBar').prop('checked'),
                    positionClass: $('#positionGroup input:radio:checked').val() || 'toast-top-right',
                    onclick: null
                };
                if ($('#addBehaviorOnToastClick').prop('checked')) {
                    toastr.options.onclick = function () {
                        alert('You can perform some custom action after a toast goes away');
                    };
                }
                if ($showDuration.val().length) {
                    toastr.options.showDuration = $showDuration.val();
                }
                if ($hideDuration.val().length) {
                    toastr.options.hideDuration = $hideDuration.val();
                }
                if ($timeOut.val().length) {
                    toastr.options.timeOut = $timeOut.val();
                }
                if ($extendedTimeOut.val().length) {
                    toastr.options.extendedTimeOut = $extendedTimeOut.val();
                }
                if ($showEasing.val().length) {
                    toastr.options.showEasing = $showEasing.val();
                }
                if ($hideEasing.val().length) {
                    toastr.options.hideEasing = $hideEasing.val();
                }
                if ($showMethod.val().length) {
                    toastr.options.showMethod = $showMethod.val();
                }
                if ($hideMethod.val().length) {
                    toastr.options.hideMethod = $hideMethod.val();
                }
                if (!msg) {
                    msg = getMessage();
                }
                $("#toastrOptions").text("Command: toastr["
                        + shortCutFunction
                        + "](\""
                        + msg
                        + (title ? "\", \"" + title : '')
                        + "\")\n\ntoastr.options = "
                        + JSON.stringify(toastr.options, null, 2)
                );
                var $toast = toastr[shortCutFunction](msg, title); // Wire up an event handler to a button in the toast, if it exists
                $toastlast = $toast;
                if ($toast.find('#okBtn').length) {
                    $toast.delegate('#okBtn', 'click', function () {
                        alert('you clicked me. i was toast #' + toastIndex + '. goodbye!');
                        $toast.remove();
                    });
                }
                if ($toast.find('#surpriseBtn').length) {
                    $toast.delegate('#surpriseBtn', 'click', function () {
                        alert('Surprise! you clicked me. i was toast #' + toastIndex + '. You could perform an action here.');
                    });
                }
            });
            function getLastToast() {
                return $toastlast;
            }
            $('#clearlasttoast').click(function () {
                toastr.clear(getLastToast());
            });
            $('#cleartoasts').click(function () {
                toastr.clear();
            });

        });
    </script>

    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                  alert("@ViewBag.Message");
            };
        </script>
    }
}
